{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\React\\\\ReactJsWebAPI-main\\\\my-app\\\\src\\\\Student.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Student extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deps: [],\n      addModalShow: false,\n      editModalShow: false\n    };\n  }\n  refreshList() {\n    fetch(process.env.REACT_APP_API + 'Student').then(response => response.json()).then(data => {\n      this.setState({\n        stds: data\n      });\n    });\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  componentDidUpdate() {\n    this.refreshList();\n  }\n  deleteStd(stdid) {\n    if (window.confirm('Are you sure?')) {\n      fetch(process.env.REACT_APP_API + 'Student/' + stdid, {\n        method: 'DELETE',\n        header: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }\n  render() {\n    const {\n      stds,\n      stdid,\n      StudentFirstName,\n      StudentLasttName,\n      photofilename,\n      StudentNote\n    } = this.state;\n    let addModalClose = () => this.setState({\n      addModalShow: false\n    });\n    let editModalClose = () => this.setState({\n      editModalShow: false\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: \"mt-4\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"StudentID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"StudentFirstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"StudentLastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PhotoFileName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"StudentNote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stds.map(std => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: std.StudentFirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: std.StudentLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: std.PhotoFileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: std.StudentNote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"info\",\n                  onClick: () => this.setState({\n                    editModalShow: true,\n                    stdid: std.StudentID,\n                    StudentFirstName: std.StudentFirstName,\n                    StudentLastName: std.StudentLastName,\n                    photofilename: std.PhotoFileName,\n                    StudentNote: std.StudentNote\n                  }),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"danger\",\n                  onClick: () => this.deleteStd(std.StudentID),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(EditStdModal, {\n                  show: this.state.editModalShow,\n                  onHide: editModalClose,\n                  stdid: stdid,\n                  StudentFirstName: StudentFirstName,\n                  StudentLastName: StudentLastName,\n                  photofilename: photofilename,\n                  StudentNote: StudentNote\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, std.StudentID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => this.setState({\n            addModalShow: true\n          }),\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEmpModal, {\n          show: this.state.addModalShow,\n          onHide: addModalClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Table","Button","ButtonToolbar","jsxDEV","_jsxDEV","Student","constructor","props","state","deps","addModalShow","editModalShow","refreshList","fetch","process","env","REACT_APP_API","then","response","json","data","setState","stds","componentDidMount","componentDidUpdate","deleteStd","stdid","window","confirm","method","header","render","StudentFirstName","StudentLasttName","photofilename","StudentNote","addModalClose","editModalClose","children","className","striped","bordered","hover","size","fileName","_jsxFileName","lineNumber","columnNumber","map","std","StudentLastName","PhotoFileName","variant","onClick","StudentID","EditStdModal","show","onHide","AddEmpModal"],"sources":["D:/Work/React/ReactJsWebAPI-main/my-app/src/Student.js"],"sourcesContent":["import React,{Component} from 'react';\r\n\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {Button,ButtonToolbar} from 'react-bootstrap';\r\n\r\n\r\nexport class Student extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={deps:[], addModalShow:false, editModalShow:false}\r\n    }\r\n\r\n    refreshList(){\r\n        fetch(process.env.REACT_APP_API+'Student')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.setState({stds:data});\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.refreshList();\r\n    }\r\n\r\n\r\n    deleteStd(stdid){\r\n        if(window.confirm('Are you sure?')){\r\n            fetch(process.env.REACT_APP_API+'Student/'+stdid,{\r\n                method:'DELETE',\r\n                header:{'Accept':'application/json',\r\n            'Content-Type':'application/json'}\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const {stds, stdid,StudentFirstName,StudentLasttName,photofilename,StudentNote}=this.state;\r\n        let addModalClose=()=>this.setState({addModalShow:false});\r\n        let editModalClose=()=>this.setState({editModalShow:false});\r\n        return(\r\n            <div >\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>StudentID</th>\r\n                        <th>StudentFirstName</th>\r\n                        <th>StudentLastName</th>\r\n                        <th>PhotoFileName</th>\r\n                        <th>StudentNote</th>\r\n                        <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {stds.map(std=>\r\n                            <tr key={std.StudentID}>\r\n                                <td>{std.StudentFirstName}</td>\r\n                                <td>{std.StudentLastName}</td>\r\n                                <td>{std.PhotoFileName}</td>\r\n                                <td>{std.StudentNote}</td>\r\n                                <td>\r\n<ButtonToolbar>\r\n    <Button className=\"mr-2\" variant=\"info\"\r\n    onClick={()=>this.setState({editModalShow:true,\r\n        stdid:std.StudentID,StudentFirstName:std.StudentFirstName,StudentLastName:std.StudentLastName,\r\n        photofilename:std.PhotoFileName,StudentNote:std.StudentNote})}>\r\n            Edit\r\n        </Button>\r\n\r\n        <Button className=\"mr-2\" variant=\"danger\"\r\n    onClick={()=>this.deleteStd(std.StudentID)}>\r\n            Delete\r\n        </Button>\r\n\r\n        <EditStdModal show={this.state.editModalShow}\r\n        onHide={editModalClose}\r\n        stdid={stdid}\r\n        StudentFirstName={StudentFirstName}\r\n        StudentLastName={StudentLastName}\r\n        photofilename={photofilename}\r\n        StudentNote={StudentNote}\r\n        />\r\n</ButtonToolbar>\r\n\r\n                                </td>\r\n\r\n                            </tr>)}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n                <ButtonToolbar>\r\n                    <Button variant='primary'\r\n                    onClick={()=>this.setState({addModalShow:true})}>\r\n                    Add Employee</Button>\r\n\r\n                    <AddEmpModal show={this.state.addModalShow}\r\n                    onHide={addModalClose}/>\r\n                </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AAErC,SAAQC,KAAK,QAAO,iBAAiB;AAErC,SAAQC,MAAM,EAACC,aAAa,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,OAAO,MAAMC,OAAO,SAASN,SAAS;EAElCO,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAC;MAACC,IAAI,EAAC,EAAE;MAAEC,YAAY,EAAC,KAAK;MAAEC,aAAa,EAAC;IAAK,CAAC;EACjE;EAEAC,WAAWA,CAAA,EAAE;IACTC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,aAAa,GAAC,SAAS,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAACG,IAAI,IAAE;MACR,IAAI,CAACC,QAAQ,CAAC;QAACC,IAAI,EAACF;MAAI,CAAC,CAAC;IAC9B,CAAC,CAAC;EACN;EAEAG,iBAAiBA,CAAA,EAAE;IACf,IAAI,CAACX,WAAW,CAAC,CAAC;EACtB;EAEAY,kBAAkBA,CAAA,EAAE;IAChB,IAAI,CAACZ,WAAW,CAAC,CAAC;EACtB;EAGAa,SAASA,CAACC,KAAK,EAAC;IACZ,IAAGC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,EAAC;MAC/Bf,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,aAAa,GAAC,UAAU,GAACU,KAAK,EAAC;QAC7CG,MAAM,EAAC,QAAQ;QACfC,MAAM,EAAC;UAAC,QAAQ,EAAC,kBAAkB;UACvC,cAAc,EAAC;QAAkB;MACjC,CAAC,CAAC;IACN;EACJ;EAGAC,MAAMA,CAAA,EAAE;IACJ,MAAM;MAACT,IAAI;MAAEI,KAAK;MAACM,gBAAgB;MAACC,gBAAgB;MAACC,aAAa;MAACC;IAAW,CAAC,GAAC,IAAI,CAAC3B,KAAK;IAC1F,IAAI4B,aAAa,GAACA,CAAA,KAAI,IAAI,CAACf,QAAQ,CAAC;MAACX,YAAY,EAAC;IAAK,CAAC,CAAC;IACzD,IAAI2B,cAAc,GAACA,CAAA,KAAI,IAAI,CAAChB,QAAQ,CAAC;MAACV,aAAa,EAAC;IAAK,CAAC,CAAC;IAC3D,oBACIP,OAAA;MAAAkC,QAAA,gBACIlC,OAAA,CAACJ,KAAK;QAACuC,SAAS,EAAC,MAAM;QAACC,OAAO;QAACC,QAAQ;QAACC,KAAK;QAACC,IAAI,EAAC,IAAI;QAAAL,QAAA,gBACpDlC,OAAA;UAAAkC,QAAA,eACIlC,OAAA;YAAAkC,QAAA,gBACIlC,OAAA;cAAAkC,QAAA,EAAI;YAAS;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB3C,OAAA;cAAAkC,QAAA,EAAI;YAAgB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzB3C,OAAA;cAAAkC,QAAA,EAAI;YAAe;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxB3C,OAAA;cAAAkC,QAAA,EAAI;YAAa;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB3C,OAAA;cAAAkC,QAAA,EAAI;YAAW;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpB3C,OAAA;cAAAkC,QAAA,EAAI;YAAO;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACR3C,OAAA;UAAAkC,QAAA,EACKhB,IAAI,CAAC0B,GAAG,CAACC,GAAG,iBACT7C,OAAA;YAAAkC,QAAA,gBACIlC,OAAA;cAAAkC,QAAA,EAAKW,GAAG,CAACjB;YAAgB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/B3C,OAAA;cAAAkC,QAAA,EAAKW,GAAG,CAACC;YAAe;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9B3C,OAAA;cAAAkC,QAAA,EAAKW,GAAG,CAACE;YAAa;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5B3C,OAAA;cAAAkC,QAAA,EAAKW,GAAG,CAACd;YAAW;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1B3C,OAAA;cAAAkC,QAAA,eAChClC,OAAA,CAACF,aAAa;gBAAAoC,QAAA,gBACVlC,OAAA,CAACH,MAAM;kBAACsC,SAAS,EAAC,MAAM;kBAACa,OAAO,EAAC,MAAM;kBACvCC,OAAO,EAAEA,CAAA,KAAI,IAAI,CAAChC,QAAQ,CAAC;oBAACV,aAAa,EAAC,IAAI;oBAC1Ce,KAAK,EAACuB,GAAG,CAACK,SAAS;oBAACtB,gBAAgB,EAACiB,GAAG,CAACjB,gBAAgB;oBAACkB,eAAe,EAACD,GAAG,CAACC,eAAe;oBAC7FhB,aAAa,EAACe,GAAG,CAACE,aAAa;oBAAChB,WAAW,EAACc,GAAG,CAACd;kBAAW,CAAC,CAAE;kBAAAG,QAAA,EAAC;gBAE/D;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAET3C,OAAA,CAACH,MAAM;kBAACsC,SAAS,EAAC,MAAM;kBAACa,OAAO,EAAC,QAAQ;kBAC7CC,OAAO,EAAEA,CAAA,KAAI,IAAI,CAAC5B,SAAS,CAACwB,GAAG,CAACK,SAAS,CAAE;kBAAAhB,QAAA,EAAC;gBAExC;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAET3C,OAAA,CAACmD,YAAY;kBAACC,IAAI,EAAE,IAAI,CAAChD,KAAK,CAACG,aAAc;kBAC7C8C,MAAM,EAAEpB,cAAe;kBACvBX,KAAK,EAAEA,KAAM;kBACbM,gBAAgB,EAAEA,gBAAiB;kBACnCkB,eAAe,EAAEA,eAAgB;kBACjChB,aAAa,EAAEA,aAAc;kBAC7BC,WAAW,EAAEA;gBAAY;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEoB,CAAC;UAAA,GA7BAE,GAAG,CAACK,SAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA+BlB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC,eAER3C,OAAA,CAACF,aAAa;QAAAoC,QAAA,gBACVlC,OAAA,CAACH,MAAM;UAACmD,OAAO,EAAC,SAAS;UACzBC,OAAO,EAAEA,CAAA,KAAI,IAAI,CAAChC,QAAQ,CAAC;YAACX,YAAY,EAAC;UAAI,CAAC,CAAE;UAAA4B,QAAA,EAAC;QACrC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAErB3C,OAAA,CAACsD,WAAW;UAACF,IAAI,EAAE,IAAI,CAAChD,KAAK,CAACE,YAAa;UAC3C+C,MAAM,EAAErB;QAAc;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEd;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}